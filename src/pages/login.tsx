import { NextPage } from "next";
import { useState } from "react";
import { useRouter } from "next/router";
import axios from "axios";
import Cookies from "js-cookie";
import { toast, ToastContainer } from "react-toastify";
import "react-toastify/dist/ReactToastify.css";
import { Button, Container, TextField, Typography, Grid } from "@mui/material";
import Head from "next/head";

const Login: NextPage = () => {
  const router = useRouter();
  const [submitting, setSubmitting] = useState(false);
  const [username, setUsername] = useState("");
  const [password, setPassword] = useState("");

  const getRedirect = () => {
    return "/";
  };

  const login = async () => {
    if (submitting) {
      return;
    }

    // Trim the whitespace from username and password
    const trimmedUsername = username.trim();
    const trimmedPassword = password.trim();

    setSubmitting(true);

    try {
      const res = await axios.post("api/user/login", {
        username: trimmedUsername,
        password: trimmedPassword,
      });

      if (res.status === 200) {
        Cookies.set("client_token", res.data.token, { expires: 1 });
        router.push(getRedirect());
        toast.success("Login successful!", { position: "top-right" });
      } else {
        toast.error(
          "Authentication error. Please check your username and password.",
          { position: "top-right" }
        );
      }
    } catch (error) {
      toast.error("An error occurred. Please try again later.", {
        position: "top-right",
      });
    } finally {
      setSubmitting(false);
    }
  };

  return (
    <>
      <Head>
        <title>ACCEPTED MANAGEMENT SYSTEM | LOGIN</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="min-vh-100 d-flex flex-row align-items-center dark-bg-transparent">
        <ToastContainer position="top-right" autoClose={3000} />
        <Container>
          <Grid container justifyContent="center" alignItems="center">
            <Grid item lg={5}>
              <div className="text-center bg-white border p-5 radius-large">
                <Typography variant="h4" gutterBottom>
                  Login
                </Typography>
                <Typography variant="body1" className="text-black-50">
                  Sign In to your account
                </Typography>

                <form>
                  <TextField
                    fullWidth
                    margin="normal"
                    label="Username"
                    variant="outlined"
                    name="username"
                    required
                    disabled={submitting}
                    value={username}
                    onChange={(e) => setUsername(e.target.value)}
                  />

                  <TextField
                    fullWidth
                    margin="normal"
                    label="Password"
                    variant="outlined"
                    type="password"
                    name="password"
                    required
                    disabled={submitting}
                    value={password}
                    onChange={(e) => setPassword(e.target.value)}
                  />

                  <Button
                    fullWidth
                    variant="contained"
                    color="primary"
                    type="submit"
                    disabled={submitting}
                    onClick={login}
                  >
                    {submitting ? "Logging in..." : "Login"}
                  </Button>
                </form>
              </div>
            </Grid>
          </Grid>
        </Container>
      </div>
    </>
  );
};

export default Login;
